{
  "project_id": "mvvzqouqxrtyzuzqbeud",
  "generated_at": "2025-10-25T00:00:00.000Z",
  "schemas": [
    "public",
    "auth",
    "storage",
    "extensions",
    "graphql",
    "graphql_public",
    "realtime",
    "vault",
    "pgbouncer"
  ],
  "tables": [
    {"schema":"auth","name":"users","rls_enabled":true,"rows":381,"columns":[{"name":"instance_id","data_type":"uuid","format":"uuid","options":["nullable","updatable"]},{"name":"id","data_type":"uuid","format":"uuid","options":["updatable"]},{"name":"aud","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"role","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"email","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"encrypted_password","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"email_confirmed_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"invited_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"confirmation_token","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"confirmation_sent_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"recovery_token","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"recovery_sent_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"email_change_token_new","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"email_change","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"email_change_sent_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"last_sign_in_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"raw_app_meta_data","data_type":"jsonb","format":"jsonb","options":["nullable","updatable"]},{"name":"raw_user_meta_data","data_type":"jsonb","format":"jsonb","options":["nullable","updatable"]},{"name":"is_super_admin","data_type":"boolean","format":"bool","options":["nullable","updatable"]},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"updated_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"phone","data_type":"text","format":"text","options":["nullable","updatable","unique"],"default_value":"NULL::character varying"},{"name":"phone_confirmed_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"phone_change","data_type":"text","format":"text","options":["nullable","updatable"],"default_value":"''::character varying"},{"name":"phone_change_token","data_type":"character varying","format":"varchar","options":["nullable","updatable"],"default_value":"''::character varying"},{"name":"phone_change_sent_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"confirmed_at","data_type":"timestamp with time zone","format":"timestamptz","options":["generated","nullable","updatable"],"default_value":"LEAST(email_confirmed_at, phone_confirmed_at)"},{"name":"email_change_token_current","data_type":"character varying","format":"varchar","options":["nullable","updatable"],"default_value":"''::character varying"},{"name":"email_change_confirm_status","data_type":"smallint","format":"int2","options":["nullable","updatable"],"default_value":"0","check":"email_change_confirm_status >= 0 AND email_change_confirm_status <= 2"},{"name":"banned_until","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"reauthentication_token","data_type":"character varying","format":"varchar","options":["nullable","updatable"],"default_value":"''::character varying"},{"name":"reauthentication_sent_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"is_sso_user","data_type":"boolean","format":"bool","options":["updatable"],"default_value":"false","comment":"Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails."},{"name":"deleted_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"is_anonymous","data_type":"boolean","format":"bool","options":["updatable"],"default_value":"false"}],"primary_keys":["id"],"comment":"Auth: Stores user login data within a secure schema.","foreign_key_constraints":[{"name":"student_results_created_by_fkey","source":"public.student_results.created_by","target":"auth.users.id"},{"name":"identities_user_id_fkey","source":"auth.identities.user_id","target":"auth.users.id"},{"name":"sessions_user_id_fkey","source":"auth.sessions.user_id","target":"auth.users.id"},{"name":"mfa_factors_user_id_fkey","source":"auth.mfa_factors.user_id","target":"auth.users.id"},{"name":"one_time_tokens_user_id_fkey","source":"auth.one_time_tokens.user_id","target":"auth.users.id"},{"name":"users_id_fkey","source":"public.users.id","target":"auth.users.id"},{"name":"fee_payments_created_by_fkey","source":"public.fee_payments.created_by","target":"auth.users.id"},{"name":"tests_created_by_fkey","source":"public.tests.created_by","target":"auth.users.id"},{"name":"admin_auth_user_fk","source":"public.admin.auth_user_id","target":"auth.users.id"},{"name":"student_auth_user_fk","source":"public.student.auth_user_id","target":"auth.users.id"},{"name":"timetable_slots_created_by_fkey","source":"public.timetable_slots.created_by","target":"auth.users.id"},{"name":"exams_created_by_fkey","source":"public.exams.created_by","target":"auth.users.id"},{"name":"learning_resources_uploaded_by_fkey","source":"public.learning_resources.uploaded_by","target":"auth.users.id"},{"name":"test_attempts_evaluated_by_fkey","source":"public.test_attempts.evaluated_by","target":"auth.users.id"},{"name":"chapter_media_bindings_created_by_fkey","source":"public.chapter_media_bindings.created_by","target":"auth.users.id"},{"name":"student_user_links_user_id_fkey","source":"public.student_user_links.user_id","target":"auth.users.id"},{"name":"test_marks_created_by_fkey","source":"public.test_marks.created_by","target":"auth.users.id"},{"name":"lms_videos_uploaded_by_fkey","source":"public.lms_videos.uploaded_by","target":"auth.users.id"},{"name":"lms_pdfs_uploaded_by_fkey","source":"public.lms_pdfs.uploaded_by","target":"auth.users.id"},{"name":"syllabi_created_by_fkey","source":"public.syllabi.created_by","target":"auth.users.id"},{"name":"syllabus_chapters_created_by_fkey","source":"public.syllabus_chapters.created_by","target":"auth.users.id"},{"name":"super_admin_auth_user_fk","source":"public.super_admin.auth_user_id","target":"auth.users.id"},{"name":"syllabus_topics_created_by_fkey","source":"public.syllabus_topics.created_by","target":"auth.users.id"},{"name":"school_calendar_events_created_by_fkey","source":"public.school_calendar_events.created_by","target":"auth.users.id"},{"name":"fk_tasks_created_by","source":"public.tasks.created_by","target":"auth.users.id"},{"name":"oauth_authorizations_user_id_fkey","source":"auth.oauth_authorizations.user_id","target":"auth.users.id"},{"name":"fk_task_submissions_graded_by","source":"public.task_submissions.graded_by","target":"auth.users.id"},{"name":"oauth_consents_user_id_fkey","source":"auth.oauth_consents.user_id","target":"auth.users.id"}]},
    {"schema":"auth","name":"refresh_tokens","rls_enabled":true,"rows":95,"columns":[{"name":"instance_id","data_type":"uuid","format":"uuid","options":["nullable","updatable"]},{"name":"id","data_type":"bigint","format":"int8","options":["updatable"],"default_value":"nextval('auth.refresh_tokens_id_seq'::regclass)"},{"name":"token","data_type":"character varying","format":"varchar","options":["nullable","updatable","unique"]},{"name":"user_id","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"revoked","data_type":"boolean","format":"bool","options":["nullable","updatable"]},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"updated_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"parent","data_type":"character varying","format":"varchar","options":["nullable","updatable"]},{"name":"session_id","data_type":"uuid","format":"uuid","options":["nullable","updatable"]}],"primary_keys":["id"],"comment":"Auth: Store of tokens used to refresh JWT tokens once they expire.","foreign_key_constraints":[{"name":"refresh_tokens_session_id_fkey","source":"auth.refresh_tokens.session_id","target":"auth.sessions.id"}]},
    {"schema":"auth","name":"instances","rls_enabled":true,"rows":0,"columns":[{"name":"id","data_type":"uuid","format":"uuid","options":["updatable"]},{"name":"uuid","data_type":"uuid","format":"uuid","options":["nullable","updatable"]},{"name":"raw_base_config","data_type":"text","format":"text","options":["nullable","updatable"]},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"updated_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]}],"primary_keys":["id"],"comment":"Auth: Manages users across multiple sites."},
    {"schema":"auth","name":"audit_log_entries","rls_enabled":true,"rows":3784,"columns":[{"name":"instance_id","data_type":"uuid","format":"uuid","options":["nullable","updatable"]},{"name":"id","data_type":"uuid","format":"uuid","options":["updatable"]},{"name":"payload","data_type":"json","format":"json","options":["nullable","updatable"]},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"ip_address","data_type":"character varying","format":"varchar","options":["updatable"],"default_value":"''::character varying"}],"primary_keys":["id"],"comment":"Auth: Audit trail for user actions."},
    {"schema":"auth","name":"schema_migrations","rls_enabled":true,"rows":67,"columns":[{"name":"version","data_type":"character varying","format":"varchar","options":["updatable"]}],"primary_keys":["version"],"comment":"Auth: Manages updates to the auth system."},
    {"schema":"storage","name":"buckets","rls_enabled":true,"rows":1,"columns":[{"name":"id","data_type":"text","format":"text","options":["updatable"]},{"name":"name","data_type":"text","format":"text","options":["updatable"]},{"name":"owner","data_type":"uuid","format":"uuid","options":["nullable","updatable"],"comment":"Field is deprecated, use owner_id instead"},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"],"default_value":"now()"},{"name":"updated_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"],"default_value":"now()"},{"name":"public","data_type":"boolean","format":"bool","options":["nullable","updatable"],"default_value":"false"},{"name":"avif_autodetection","data_type":"boolean","format":"bool","options":["nullable","updatable"],"default_value":"false"},{"name":"file_size_limit","data_type":"bigint","format":"int8","options":["nullable","updatable"]},{"name":"allowed_mime_types","data_type":"ARRAY","format":"_text","options":["nullable","updatable"]},{"name":"owner_id","data_type":"text","format":"text","options":["nullable","updatable"]},{"name":"type","data_type":"USER-DEFINED","format":"buckettype","options":["updatable"],"default_value":"'STANDARD'::storage.buckettype","enums":["STANDARD","ANALYTICS"]}],"primary_keys":["id"],"foreign_key_constraints":[{"name":"prefixes_bucketId_fkey","source":"storage.prefixes.bucket_id","target":"storage.buckets.id"},{"name":"s3_multipart_uploads_parts_bucket_id_fkey","source":"storage.s3_multipart_uploads_parts.bucket_id","target":"storage.buckets.id"},{"name":"objects_bucketId_fkey","source":"storage.objects.bucket_id","target":"storage.buckets.id"},{"name":"s3_multipart_uploads_bucket_id_fkey","source":"storage.s3_multipart_uploads.bucket_id","target":"storage.buckets.id"}]},
    {"schema":"storage","name":"objects","rls_enabled":true,"rows":9,"columns":[{"name":"id","data_type":"uuid","format":"uuid","options":["updatable"],"default_value":"gen_random_uuid()"},{"name":"bucket_id","data_type":"text","format":"text","options":["nullable","updatable"]},{"name":"name","data_type":"text","format":"text","options":["nullable","updatable"]},{"name":"owner","data_type":"uuid","format":"uuid","options":["nullable","updatable"],"comment":"Field is deprecated, use owner_id instead"},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"],"default_value":"now()"},{"name":"updated_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"],"default_value":"now"},{"name":"last_accessed_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"],"default_value":"now()"},{"name":"metadata","data_type":"jsonb","format":"jsonb","options":["nullable","updatable"]},{"name":"path_tokens","data_type":"ARRAY","format":"_text","options":["generated","nullable","updatable"],"default_value":"string_to_array(name, '/'::text)"},{"name":"version","data_type":"text","format":"text","options":["nullable","updatable"]},{"name":"owner_id","data_type":"text","format":"text","options":["nullable","updatable"]},{"name":"user_metadata","data_type":"jsonb","format":"jsonb","options":["nullable","updatable"]},{"name":"level","data_type":"integer","format":"int4","options":["nullable","updatable"]}],"primary_keys":["id"],"foreign_key_constraints":[{"name":"objects_bucketId_fkey","source":"storage.objects.bucket_id","target":"storage.buckets.id"}]},
    {"schema":"storage","name":"migrations","rls_enabled":true,"rows":44,"columns":[{"name":"id","data_type":"integer","format":"int4","options":["updatable"]},{"name":"name","data_type":"character varying","format":"varchar","options":["updatable","unique"]},{"name":"hash","data_type":"character varying","format":"varchar","options":["updatable"]},{"name":"executed_at","data_type":"timestamp without time zone","format":"timestamp","options":["nullable","updatable"],"default_value":"CURRENT_TIMESTAMP"}],"primary_keys":["id"]},
    {"schema":"auth","name":"identities","rls_enabled":true,"rows":381,"columns":[{"name":"provider_id","data_type":"text","format":"text","options":["updatable"]},{"name":"user_id","data_type":"uuid","format":"uuid","options":["updatable"]},{"name":"identity_data","data_type":"jsonb","format":"jsonb","options":["updatable"]},{"name":"provider","data_type":"text","format":"text","options":["updatable"]},{"name":"last_sign_in_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"created_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"updated_at","data_type":"timestamp with time zone","format":"timestamptz","options":["nullable","updatable"]},{"name":"email","data_type":"text","format":"text","options":["generated","nullable","updatable"],"default_value":"lower((identity_data ->> 'email'::text))","comment":"Auth: Email is a generated column that references the optional email property in the identity_data"},{"name":"id","data_type":"uuid","format":"uuid","options":["updatable"],"default_value":"gen_random_uuid()"}],"primary_keys":["id"],"comment":"Auth: Stores identities associated to a user.","foreign_key_constraints":[{"name":"identities_user_id_fkey","source":"auth.identities.user_id","target":"auth.users.id"}]}
    
    
    
  ],
  "views": [
    {"table_schema":"extensions","table_name":"hypopg_hidden_indexes","view_definition":null},
    {"table_schema":"extensions","table_name":"hypopg_list_indexes","view_definition":null},
    {"table_schema":"extensions","table_name":"pg_stat_statements","view_definition":" SELECT userid,\n    dbid,\n    toplevel,\n    queryid,\n    query,\n    plans,\n    total_plan_time,\n    min_plan_time,\n    max_plan_time,\n    mean_plan_time,\n    stddev_plan_time,\n    calls,\n    total_exec_time,\n    min_exec_time,\n    max_exec_time,\n    mean_exec_time,\n    stddev_exec_time,\n    rows,\n    shared_blks_hit,\n    shared_blks_read,\n    shared_blks_dirtied,\n    shared_blks_written,\n    local_blks_hit,\n    local_blks_read,\n    local_blks_dirtied,\n    local_blks_written,\n    temp_blks_read,\n    temp_blks_written,\n    shared_blk_read_time,\n    shared_blk_write_time,\n    local_blk_read_time,\n    local_blk_write_time,\n    temp_blk_read_time,\n    temp_blk_write_time,\n    wal_records,\n    wal_fpi,\n    wal_bytes,\n    jit_functions,\n    jit_generation_time,\n    jit_inlining_count,\n    jit_inlining_time,\n    jit_optimization_count,\n    jit_optimization_time,\n    jit_emission_count,\n    jit_emission_time,\n    jit_deform_count,\n    jit_deform_time,\n    stats_since,\n    minmax_stats_since\n   FROM pg_stat_statements(true) pg_stat_statements(userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, shared_blk_read_time, shared_blk_write_time, local_blk_read_time, local_blk_write_time, temp_blk_read_time, temp_blk_write_time, wal_records, wal_fpi, wal_bytes, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time, jit_deform_count, jit_deform_time, stats_since, minmax_stats_since);"},
    {"table_schema":"extensions","table_name":"pg_stat_statements_info","view_definition":" SELECT dealloc,\n    stats_reset\n   FROM pg_stat_statements_info() pg_stat_statements_info(dealloc, stats_reset);"},
    {"table_schema":"public","table_name":"_jwt_ctx","view_definition":" SELECT COALESCE(NULLIF((auth.jwt() ->> 'school_code'::text), ''::text), NULL::text) AS v_school_code;"},
    {"table_schema":"public","table_name":"cb_admin_platform_metrics","view_definition":" SELECT count(DISTINCT school_code) AS total_schools,\n    count(DISTINCT\n        CASE\n            WHEN (is_active = true) THEN school_code\n            ELSE NULL::text\n        END) AS active_schools,\n    count(DISTINCT\n        CASE\n            WHEN (is_active = false) THEN school_code\n            ELSE NULL::text\n        END) AS inactive_schools,\n    sum(( SELECT count(*) AS count\n           FROM student\n          WHERE (student.school_code = s.school_code))) AS total_students_platform,\n    sum(( SELECT count(*) AS count\n           FROM admin\n          WHERE (admin.school_code = s.school_code))) AS total_admins_platform,\n    sum(( SELECT count(*) AS count\n           FROM class_instances\n          WHERE (class_instances.school_code = s.school_code))) AS total_classes_platform,\n    count(DISTINCT\n        CASE\n            WHEN (created_at > (now() - '30 days'::interval)) THEN school_code\n            ELSE NULL::text\n        END) AS new_schools_30_days,\n    count(DISTINCT\n        CASE\n            WHEN (created_at > (now() - '7 days'::interval)) THEN school_code\n            ELSE NULL::text\n        END) AS new_schools_7_days\n   FROM schools s;"},
    {"table_schema":"public","table_name":"cb_admin_school_directory","view_definition":" SELECT s.school_code,\n    s.school_name,\n    s.is_active,\n    s.created_at,\n    sa.email AS owner_email,\n    sa.full_name AS owner_name,\n    sa.super_admin_code,\n    ( SELECT count(*) AS count\n           FROM student\n          WHERE (student.school_code = s.school_code)) AS total_students,\n    ( SELECT count(*) AS count\n           FROM admin\n          WHERE (admin.school_code = s.school_code)) AS total_admins,\n    ( SELECT count(*) AS count\n           FROM class_instances\n          WHERE (class_instances.school_code = s.school_code)) AS total_classes,\n    ( SELECT max(student.created_at) AS max\n           FROM student\n          WHERE (student.school_code = s.school_code)) AS last_student_activity,\n    ( SELECT max(admin.created_at) AS max\n           FROM admin\n          WHERE (admin.school_code = s.school_code)) AS last_admin_activity\n   FROM (schools s\n     LEFT JOIN super_admin sa ON ((s.school_code = sa.school_code)))\n  WHERE (s.is_active = true);"},
    {"table_schema":"public","table_name":"cb_admin_school_health","view_definition":" SELECT school_code,\n    school_name,\n    is_active,\n        CASE\n            WHEN (( SELECT max(student.created_at) AS max\n               FROM student\n              WHERE (student.school_code = s.school_code)) > (now() - '7 days'::interval)) THEN 'active'::text\n            ELSE 'inactive'::text\n        END AS student_activity_status,\n        CASE\n            WHEN (( SELECT max(admin.created_at) AS max\n               FROM admin\n              WHERE (admin.school_code = s.school_code)) > (now() - '7 days'::interval)) THEN 'active'::text\n            ELSE 'inactive'::text\n        END AS admin_activity_status,\n    ( SELECT count(*) AS count\n           FROM student\n          WHERE (student.school_code = s.school_code)) AS student_count,\n    ( SELECT count(*) AS count\n           FROM admin\n          WHERE (admin.school_code = s.school_code)) AS admin_count,\n    ( SELECT count(*) AS count\n           FROM class_instances\n          WHERE (class_instances.school_code = s.school_code)) AS class_count,\n    ( SELECT max(student.created_at) AS max\n           FROM student\n          WHERE (student.school_code = s.school_code)) AS last_student_activity,\n    ( SELECT max(admin.created_at) AS max\n           FROM admin\n          WHERE (admin.school_code = s.school_code)) AS last_admin_activity\n   FROM schools s;"},
    {"table_schema":"public","table_name":"fee_collection_summary","view_definition":" SELECT s.id AS student_id,\n    s.full_name AS student_name,\n    s.student_code,\n    ci.grade,\n    ci.section,\n    ci.id AS class_instance_id,\n    fsp.id AS plan_id,\n    fct.id AS component_type_id,\n    fct.name AS component_name,\n    fspi.amount_paise AS plan_amount_paise,\n    COALESCE(sum(fp.amount_paise), (0)::bigint) AS collected_amount_paise,\n    (fspi.amount_paise - COALESCE(sum(fp.amount_paise), (0)::bigint)) AS outstanding_amount_paise,\n        CASE\n            WHEN (fspi.amount_paise = 0) THEN (0)::numeric\n            ELSE round((((COALESCE(sum(fp.amount_paise), (0)::bigint))::numeric / (fspi.amount_paise)::numeric) * (100)::numeric), 2)\n        END AS collection_percentage\n   FROM (((((student s\n     JOIN class_instances ci ON ((s.class_instance_id = ci.id)))\n     JOIN fee_student_plans fsp ON ((s.id = fsp.student_id)))\n     JOIN fee_student_plan_items fspi ON ((fsp.id = fspi.plan_id)))\n     JOIN fee_component_types fct ON ((fspi.component_type_id = fct.id)))\n     LEFT JOIN fee_payments fp ON (((s.id = fp.student_id) AND (fspi.component_type_id = fp.component_type_id))))\n  GROUP BY s.id, s.full_name, s.student_code, ci.grade, ci.section, ci.id, fsp.id, fct.id, fct.name, fspi.amount_paise;"},
    {"table_schema":"public","table_name":"fee_debug_view","view_definition":" SELECT 'fee_student_plans'::text AS table_name,\n    fee_student_plans.school_code,\n    count(*) AS record_count\n   FROM fee_student_plans\n  GROUP BY fee_student_plans.school_code\nUNION ALL\n SELECT 'fee_component_types'::text AS table_name,\n    fee_component_types.school_code,\n    count(*) AS record_count\n   FROM fee_component_types\n  GROUP BY fee_component_types.school_code\nUNION ALL\n SELECT 'student'::text AS table_name,\n    student.school_code,\n    count(*) AS record_count\n   FROM student\n  GROUP BY student.school_code\n  ORDER BY 1, 2;"},
    {"table_schema":"public","table_name":"student_fee_summary","view_definition":" SELECT s.id AS student_id,\n    s.full_name AS student_name,\n    s.student_code,\n    ci.grade,\n    ci.section,\n    ci.id AS class_instance_id,\n    fsp.id AS plan_id,\n    fct.id AS component_type_id,\n    fct.name AS component_name,\n    fct.code AS component_code,\n    fspi.amount_paise AS plan_amount_paise,\n    COALESCE(sum(fp.amount_paise), (0)::bigint) AS collected_amount_paise,\n    (fspi.amount_paise - COALESCE(sum(fp.amount_paise), (0)::bigint)) AS outstanding_amount_paise,\n        CASE\n            WHEN (fspi.amount_paise = 0) THEN (0)::numeric\n            ELSE round((((COALESCE(sum(fp.amount_paise), (0)::bigint))::numeric / (NULLIF(fspi.amount_paise, 0))::numeric) * (100)::numeric), 2)\n        END AS collection_percentage\n   FROM (((((student s\n     JOIN class_instances ci ON ((s.class_instance_id = ci.id)))\n     JOIN fee_student_plans fsp ON ((s.id = fsp.student_id)))\n     JOIN fee_student_plan_items fspi ON ((fsp.id = fspi.plan_id)))\n     JOIN fee_component_types fct ON ((fspi.component_type_id = fct.id)))\n     LEFT JOIN fee_payments fp ON (((s.id = fp.student_id) AND (fspi.component_type_id = fp.component_type_id))))\n  WHERE ((s.student_code = ((auth.jwt() -> 'user_metadata'::text) ->> 'student_code'::text)) OR (s.email = (auth.jwt() ->> 'email'::text)))\n  GROUP BY s.id, s.full_name, s.student_code, ci.grade, ci.section, ci.id, fsp.id, fct.id, fct.name, fct.code, fspi.amount_paise;"},
    {"table_schema":"public","table_name":"subject_performance","view_definition":" SELECT e.id AS exam_id,\n    e.exam_name,\n    sub.subject_name,\n    es.max_marks,\n    avg(sr.obtained_marks) AS average_marks,\n    avg(sr.percentage) AS average_percentage,\n    min(sr.percentage) AS min_percentage,\n    max(sr.percentage) AS max_percentage,\n    count(sr.id) AS total_students\n   FROM (((exams e\n     JOIN exam_subjects es ON ((es.exam_id = e.id)))\n     JOIN subjects sub ON ((sub.id = es.subject_id)))\n     LEFT JOIN subject_results sr ON ((sr.exam_subject_id = es.id)))\n  GROUP BY e.id, e.exam_name, sub.subject_name, es.max_marks;"},
    {"table_schema":"public","table_name":"tenant_security_monitoring","view_definition":" SELECT event_type,\n    school_code,\n    user_role,\n    count(*) AS event_count,\n    count(DISTINCT user_id) AS unique_users,\n    min(created_at) AS first_occurrence,\n    max(created_at) AS last_occurrence\n   FROM tenant_security_audit\n  WHERE (created_at > (now() - '7 days'::interval))\n  GROUP BY event_type, school_code, user_role\n  ORDER BY (count(*)) DESC;"},
    {"table_schema":"vault","table_name":"decrypted_secrets","view_definition":null}
  ],
  "routines": [
    {"routine_schema":"auth","routine_name":"email","routine_type":"FUNCTION","return_type":"text"},
    {"routine_schema":"auth","routine_name":"jwt","routine_type":"FUNCTION","return_type":"jsonb"},
    {"routine_schema":"auth","routine_name":"role","routine_type":"FUNCTION","return_type":"text"},
    {"routine_schema":"auth","routine_name":"uid","routine_type":"FUNCTION","return_type":"uuid"},
    {"routine_schema":"public","routine_name":"get_integrated_calendar_events","routine_type":"FUNCTION","return_type":"record"},
    {"routine_schema":"public","routine_name":"get_calendar_events","routine_type":"FUNCTION","return_type":"record"},
    {"routine_schema":"public","routine_name":"get_day_data_integrated","routine_type":"FUNCTION","return_type":"record"},
    {"routine_schema":"public","routine_name":"teacher_time_conflicts","routine_type":"FUNCTION","return_type":"record"},
    {"routine_schema":"public","routine_name":"fn_class_slots_no_overlap","routine_type":"FUNCTION","return_type":"trigger"},
    {"routine_schema":"public","routine_name":"fn_timetable_slots_policy","routine_type":"FUNCTION","return_type":"trigger"},
    {"routine_schema":"public","routine_name":"syllabus_progress_for_date","routine_type":"FUNCTION","return_type":"record"},
    {"routine_schema":"public","routine_name":"student_fee_summary","routine_type":"FUNCTION","return_type":"record"},
    {"routine_schema":"public","routine_name":"fees_analytics","routine_type":"FUNCTION","return_type":"jsonb"},
    {"routine_schema":"public","routine_name":"attendance_analytics","routine_type":"FUNCTION","return_type":"jsonb"}
  ],
  "buckets": [
    {"id":"Lms","name":"Lms","public":true,"file_size_limit":null,"allowed_mime_types":null}
  ],
  "policies": [
    {"schemaname":"public","tablename":"attendance","policyname":"admin_school_crud_attendance","cmd":"ALL"},
    {"schemaname":"public","tablename":"attendance","policyname":"student_read_own_attendance","cmd":"SELECT"},
    {"schemaname":"public","tablename":"timetable_slots","policyname":"admin_school_crud_timetable_slots","cmd":"ALL"},
    {"schemaname":"public","tablename":"timetable_slots","policyname":"students_view_class_timetable","cmd":"SELECT"},
    {"schemaname":"public","tablename":"learning_resources","policyname":"admin_school_crud_learning_resources","cmd":"ALL"},
    {"schemaname":"public","tablename":"learning_resources","policyname":"students_view_class_resources","cmd":"SELECT"},
    {"schemaname":"public","tablename":"school_calendar_events","policyname":"admin_school_crud_school_calendar_events","cmd":"ALL"},
    {"schemaname":"public","tablename":"school_calendar_events","policyname":"students_view_calendar_events","cmd":"SELECT"},
    {"schemaname":"storage","tablename":"objects","policyname":"lms insert authenticated","cmd":"INSERT"},
    {"schemaname":"storage","tablename":"objects","policyname":"lms read public","cmd":"SELECT"}
  ]
}


